[{"C:\\Users\\Ani\\Desktop\\Genio\\Genio\\genio\\src\\index.js":"1","C:\\Users\\Ani\\Desktop\\Genio\\Genio\\genio\\src\\reportWebVitals.js":"2","C:\\Users\\Ani\\Desktop\\Genio\\Genio\\genio\\src\\App.js":"3","C:\\Users\\Ani\\Desktop\\Genio\\Genio\\genio\\src\\NavBar.js":"4","C:\\Users\\Ani\\Desktop\\Genio\\Genio\\genio\\src\\Footer.js":"5","C:\\Users\\Ani\\Desktop\\Genio\\Genio\\genio\\src\\Slider.js":"6"},{"size":517,"mtime":1607272947568,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1607272947568,"results":"9","hashOfConfig":"8"},{"size":17014,"mtime":1607335123922,"results":"10","hashOfConfig":"8"},{"size":7770,"mtime":1607272947568,"results":"11","hashOfConfig":"8"},{"size":4022,"mtime":1607272947568,"results":"12","hashOfConfig":"8"},{"size":1882,"mtime":1607272947568,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"10728hq",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"C:\\Users\\Ani\\Desktop\\Genio\\Genio\\genio\\src\\index.js",[],["30","31"],"C:\\Users\\Ani\\Desktop\\Genio\\Genio\\genio\\src\\reportWebVitals.js",[],"C:\\Users\\Ani\\Desktop\\Genio\\Genio\\genio\\src\\App.js",[],"C:\\Users\\Ani\\Desktop\\Genio\\Genio\\genio\\src\\NavBar.js",["32","33"],"import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport { Grid } from '@material-ui/core';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function NavBar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n  \r\n  const MobileViewBar = (\r\n    <Box component = {Grid} container style = {{\"flexGrow\":\"1\",\"flexDirection\":\"row\"}}  display ={{ lg:\"none\" , md:\"none\" ,sm:\"none\"}}>\r\n      <Grid item xs = {6} style = {{\"padding\":\"10px\",\"paddingLeft\":\"30px\"}}>\r\n        <Typography variant = \"h6\" style ={{\"color\":\"#2789E1\"}}><b>Genio</b></Typography>\r\n      </Grid>\r\n      <Grid item xs = {5}>\r\n        <Link to = '#' component = \"button\" style = {{\"float\":\"right\"}}><img src = \"/assets/images/play_store_icon.png\" style = {{\"height\":\"50px\" , \"float\":\"right\"}}></img></Link>\r\n      </Grid>\r\n    </Box>\r\n  )\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      {MobileViewBar}\r\n      <AppBar position=\"static\" style = {{\"backgroundColor\":\"#2789E1\"}}>\r\n        <Toolbar>\r\n          {/* <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Genio\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Searchâ€¦\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={17} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}","C:\\Users\\Ani\\Desktop\\Genio\\Genio\\genio\\src\\Footer.js",["34","35","36"],"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Typography } from '@material-ui/core';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Link from '@material-ui/core/Link';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport CopyrightIcon from '@material-ui/icons/Copyright';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    root:{\r\n        flexGrow:1,\r\n        alignItems:\"center\",\r\n        backgroundColor:\"#F7F9F9\",\r\n        height:300,\r\n    },\r\n    dividercolor:{\r\n        backgroundColor:\"grey\",\r\n        [theme.breakpoints.down('xs')]:{\r\n            marginTop:8,\r\n            height:10,\r\n        }\r\n    },\r\n    links_grid:{\r\n        marginTop:20,\r\n    },\r\n    links :{\r\n        color:\"black\",\r\n        marginLeft:10,\r\n        marginRight:10,\r\n        '&:hover':{\r\n            color: \"#2789E1\",\r\n        },\r\n        [theme.breakpoints.down('xs')]:{\r\n            margin:3\r\n        }\r\n    },\r\n    social:{\r\n        marginTop:6,\r\n    }\r\n}))\r\n\r\nconst Footer = () =>{\r\n    const classes = useStyles();\r\n    return(\r\n        <div>\r\n            <Grid container className = {classes.root} direction = {\"column\"}>\r\n                <Grid item className = {classes.links_grid}>\r\n                    <Grid container direction = {\"row\"}>\r\n                        <Link component=\"button\" variant=\"body2\" className = {classes.links}>Blog</Link>\r\n                        <Divider orientation=\"vertical\" flexItem  classes = {{root:classes.dividercolor}}/>\r\n                        <Link component=\"button\" variant=\"body2\" className = {classes.links}>Privacy Policy</Link>\r\n                        <Divider orientation=\"vertical\" flexItem classes = {{root:classes.dividercolor}}/>\r\n                        <Link component=\"button\" variant=\"body2\" className = {classes.links}>Terms and Conditions</Link>\r\n                        <Divider orientation=\"vertical\" flexItem classes = {{root:classes.dividercolor}}/>\r\n                        <Link component=\"button\" variant=\"body2\" className = {classes.links}>Site Map</Link>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography style ={{\"fontWeight\":\"550\",\"fontSize\":\"40px\",\"color\":\"#2789E1\",\"marginTop\":\"15px\"}}>Genio</Typography>\r\n                </Grid>\r\n                \r\n                <Grid item className = {classes.social}>\r\n                    <hr></hr>\r\n                    <Grid container direction = {'row'}>\r\n                        <Link component=\"button\" variant=\"body2\" className = {classes.links}><FacebookIcon /></Link>\r\n                        <Link component=\"button\" variant=\"body2\" className = {classes.links}><InstagramIcon /></Link>\r\n                        <Link component=\"button\" variant=\"body2\" className = {classes.links}><LinkedInIcon /></Link>  \r\n                    </Grid>\r\n                    <hr></hr>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Link component=\"button\" to = '#'><img src = \"/assets/images/play_store_icon.png\" style = {{\"height\":\"70px\" , \"float\":\"right\"}}></img></Link>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Grid container direction = {\"row\"}>\r\n                        <Typography style ={{\"fontWeight\":\"550\",\"color\":\"#2789E1\",\"marginTop\":\"2px\",\"marginBottom\":\"2px\"}}>Copyright </Typography>\r\n                        <CopyrightIcon style = {{\"color\":\"#2789E1\",\"marginLeft\":\"3px\",\"marginRight\":\"3px\"}}/>\r\n                        <Typography style ={{\"fontWeight\":\"550\",\"color\":\"#2789E1\",\"marginTop\":\"2px\",\"marginBottom\":\"2px\"}}> Genio.app-2020</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Footer;","C:\\Users\\Ani\\Desktop\\Genio\\Genio\\genio\\src\\Slider.js",["37","38"],"import React, { Component } from 'react';\r\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\r\nimport './Slider.css';\r\n \r\n// list of items\r\nconst img_data = (<img src = \"/assets/images/myimg.jpg\" style = {{\"width\":\"150px\",height:\"150px\"}}></img>);\r\nconst list = [\r\n  { name: 'item1' },\r\n  { name: 'item2' },\r\n  { name: 'item3' },\r\n  { name: 'item4' },\r\n  { name: 'item5' },\r\n  { name: 'item6' },\r\n  { name: 'item7' },\r\n  { name: 'item8' },\r\n  { name: 'item9' }\r\n];\r\n \r\n// One item component\r\n// selected prop will be passed\r\nconst MenuItem = ({text, selected}) => {\r\n  return <div\r\n    className={`menu-item ${selected ? 'active' : ''}`}\r\n    >{text}</div>;\r\n};\r\n \r\n// All items component\r\n// Important! add unique key\r\nexport const Menu = (list, selected) =>\r\n  list.map(el => {\r\n    const {name} = el;\r\n \r\n    return <MenuItem text={name} key={name} selected={selected} />;\r\n  });\r\n \r\n \r\nconst Arrow = ({ text, className }) => {\r\n  return (\r\n    <div\r\n      className={className}\r\n    >{text}</div>\r\n  );\r\n};\r\n \r\n \r\nconst ArrowLeft = Arrow({ text: '<', className: 'arrow-prev' });\r\nconst ArrowRight = Arrow({ text: '>', className: 'arrow-next' });\r\n \r\nconst selected = 'item1';\r\n \r\nclass Slider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // call it again if items count changes\r\n    this.menuItems = Menu(list, selected);\r\n  }\r\n \r\n  state = {\r\n    selected\r\n  };\r\n \r\n  onSelect = key => {\r\n    this.setState({ selected: key });\r\n  }\r\n \r\n \r\n  render() {\r\n    const { selected } = this.state;\r\n    // Create menu from items\r\n    const menu = this.menuItems;\r\n \r\n    return (\r\n      <div className=\"App\">\r\n        <ScrollMenu\r\n          data={menu}\r\n          arrowLeft={ArrowLeft}\r\n          arrowRight={ArrowRight}\r\n          selected={selected}\r\n          onSelect={this.onSelect}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slider;",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":11,"column":8,"nodeType":"45","messageId":"46","endLine":11,"endColumn":16},{"ruleId":"47","severity":1,"message":"48","line":173,"column":73,"nodeType":"49","endLine":173,"endColumn":167},{"ruleId":"43","severity":1,"message":"50","line":4,"column":8,"nodeType":"45","messageId":"46","endLine":4,"endColumn":13},{"ruleId":"43","severity":1,"message":"51","line":5,"column":8,"nodeType":"45","messageId":"46","endLine":5,"endColumn":14},{"ruleId":"47","severity":1,"message":"48","line":77,"column":55,"nodeType":"49","endLine":77,"endColumn":149},{"ruleId":"43","severity":1,"message":"52","line":6,"column":7,"nodeType":"45","messageId":"46","endLine":6,"endColumn":15},{"ruleId":"47","severity":1,"message":"48","line":6,"column":19,"nodeType":"49","endLine":6,"endColumn":100},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'MenuIcon' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Paper' is defined but never used.","'Button' is defined but never used.","'img_data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]